#+AUTHOR: Junahan
#+EMAIL: junahan@outlook
#+DATE: 2018-3-27
#+LICENSE: CC BY 4.0

* Junahan的Emacs配置
我的Emacs配置，初始版本从[[https://github.com/cnsworder/crossemacs][ Crossemacs]] 复制。参阅了很多朋友开放的Emacs配置，详情请看参考文献小节。

我的主要需求是使用Org-mode，Python，C/C++以及 Java 开发环境。

/特别提醒，本Emacs配置仅在如下环境进行过测试/
#+BEGIN_EXAMPLE
 OS: Darwin ... Darwin Kernel Version 17.4.0
 Emacs: GNU Emacs 25.3.1
#+END_EXAMPLE

* TODO 支持列表
1. 包管理 - init-cask.el，使用Cask + pallet 管理Emacs包
2. Org-mode - init-org.el， 
3. Python 开发环境 -  init-python.el，使用elpy + ein (Emacs IPython Notebook)
4. Company - 使用 Company 和 ycmd 进行自动补全，对于python，则使用 elpy
7. Theme - 
9. Dashboard - 

/TODO .../

** Company
- company-dabbrev: 将当前打开的所有 buffer 中的关键字作为补全显示(默认不使用 scratch buffer)。
- company-files: 补全路径。
- company-ispell: 英文输入提示。
- company-ycmd: c/c++ 代码补全。
# - company-anaconda: python代码补全。
- elpy-company-backend: python代码补全后端。

/如果在补全过程中取消了补全, 也可以使用命令再次开启补全。例如 company-files 补全方式就可以使用 company-files 函数开启。/

** YCMD in Mac
1) 安装依赖
#+BEGIN_SRC 
brew install cmake
#+END_SRC
2) 下载 ycmd 源代码
#+BEGIN_SRC 
git clone https://github.com/Valloric/ycmd
#+END_SRC
3) build ycmd package
#+BEGIN_SRC 
./build.py --clang-completer
#+END_SRC

** ORG mode
- 使用 Capture 快速添加 TODO 和 NOTE。
- 指定org-agenda-dir，Emacs会从指定目录下的所有 .org 文件抽取日程安排。
#+BEGIN_SRC elisp
;; define the refile targets
(defvar org-agenda-dir "")
(setq-default org-agenda-dir "~/org")
(setq org-default-notes-file "~/org/refile.org")
(setq org-agenda-files (list org-agenda-dir))
#+END_SRC

** IPython Notebook with EIN

** Using Magit
[[https://github.com/magit/magit/blob/master/Documentation/magit.org][Magit]] 是优秀的 Emacs Git 前端，实现大多数 Git 命令，足够处理常用的版本管理任务，可以让你不离开 Emacs 使用 Git。

/TODO .../

* 开发环境

** C/C++ 开发环境

*** Features
+ Source Code Reader - 把 Emacs 作为一个好用的代码阅读器
  - Find file
  - Find definition
  - Find reference
  - Find symbol
  - Find function
+ Code Company - 
 - 
+ Code DEBUG - 
+ Project Management - 

*** 快速安装和配置
- 安装 GNU Global - 一个优秀的源代码标签索引（tagging）系统。
#+BEGIN_SRC 
brew install global
#+END_SRC
- 运行 gtags 建立源代码标签索引
#+BEGIN_SRC 
$ cd {source dir}
$ gtags
#+END_SRC
- 配置 Emacs - 

*** 配置 Emacs 
- ggtags - GGTAGS 是 GNU Global 源代码标签索引系统的 Emacs 前端。
- ivy-mode - ivy + counsel + swiper
- 

* 使用方法 #<<usage>>
** 安装
#+BEGIN_SRC 
# Clone 项目
git clone https://github.com/junahan/junahan-emacs.git

# 使用cask安装依赖包
cd junahan-emacs
cask install

# 也可以运行测试脚本 - test-startup.sh来安装依赖包
./test-startup.sh
#+END_SRC
   
** 测试
通过运行项目目录中的脚本test-startup.sh运行测试，测试使用项目目录作为HOME目录运行测试脚本，测试脚本会自动运行cask安装必要的依赖包。
#+BEGIN_SRC 
# Emacs debug-init模式运行测试
./test-startup.sh
#+END_SRC

** 部署
通过运行项目目录中的脚本 deploy.sh部署，部署脚本会根据需要安装必要的依赖包。为了确保Emacs能够正确的从 ~/.emacs.d 目录启动，该脚本备份你的 ~/.emacs 文件为 ~/.emacs.backup
#+BEGIN_SRC 
# 使用stow安装至 ～/.emacs.d 目录
./deploy.sh
#+END_SRC

** TODO 定制


/未完待续.../

* 参考文献
- crossemacs, [[https://github.com/cnsworder/crossemacs]].
- purcell, [[https://github.com/purcell/emacs.d]].
- Emacs: 最好的Python编辑器, [[https://segmentfault.com/a/1190000004165173]].
- Emacs IPython Notebook, [[https://tkf.github.io/emacs-ipython-notebook/]].
- elpy,  https://elpy.readthedocs.io/en/latest/introduction.html.
- ein,  https://millejoh.github.io/emacs-ipython-notebook/.
- Master Emacs in 21 Days, zilongshanren, http://book.emacs-china.org/#orgheadline1.
- IPython Notebook, https://ipython.readthedocs.io/en/stable/.
- C/C++Development Environment for Emacs - https://tuhdo.github.io/c-ide.html.
- ggtags - https://github.com/leoliu/ggtags.
- Ivy User Manual - https://oremacs.com/swiper/.
- Ivy swiper - https://github.com/abo-abo/swiper


#+BEGIN_QUOTE
本作品采用[[http://creativecommons.org/licenses/by/4.0/][知识共享署名 4.0 国际许可协议]]进行许可。
#+END_QUOTE

